name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libzim-dev
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install libzim
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools twine
        USE_SYSTEM_LIBZIM=1 pip install -r requirements.txt
    
    - name: Build package
      run: |
        USE_SYSTEM_LIBZIM=1 python -m build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare release assets
      run: |
        mkdir -p release_assets
        find artifacts -name "*.whl" -o -name "*.tar.gz" | xargs -I{} cp {} release_assets/
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: release_assets/*
        draft: false
        prerelease: false
        generate_release_notes: true

  publish:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare for PyPI
      run: |
        mkdir -p dist
        find artifacts -name "*.whl" -o -name "*.tar.gz" | xargs -I{} cp {} dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true 